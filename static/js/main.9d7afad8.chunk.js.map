{"version":3,"sources":["components/Filter/Filter.module.scss","components/Title/title.module.scss","components/Title/Title.jsx","redux/contacts/contacts-actions.js","redux/filter/filter-selectors.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","redux/filter/filter-actions.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/contacts/contacts-reducer.js","redux/filter/filter-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss"],"names":["module","exports","Title","title","className","s","addContact","createAction","deleteContact","getFilterValue","state","contacts","filter","getContacts","items","getvisibleContacts","name","number","toLowerCase","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleInputChange","currentTarget","value","reset","onSubmit","e","preventDefault","alert","some","contact","id","uuidv4","form","autoComplete","label","autoFocus","type","onChange","input","pattern","required","btn","changeFilter","Filter","filterValue","target","ContactList","visibleContacts","list","map","item","box","onClick","onDeleteContact","App","createReducer","payload","_","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","rootReducer","combineReducers","contactReducer","filterReducer","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9d7afad8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__NcmuE\",\"input\":\"Filter_input__1xEXN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__1kU7e\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './title.module.scss';\n\nconst Title = ({ title }) => <h2 className={s.title}>{title}</h2>;\nexport default Title;\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\n\nexport const deleteContact = createAction('contacts/delete');","export const getFilterValue = state => state.contacts.filter;\n","import { getFilterValue } from 'redux/filter/filter-selectors';\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getvisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilterValue(state);\n\n  return contacts.filter(\n    ({ name, number }) =>\n      name.toLowerCase().includes(filter.toLowerCase()) ||\n      number.includes(filter),\n  );\n};","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { addContact } from 'redux/contacts/contacts-actions';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nimport s from './ContactForm.module.scss';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = ({ currentTarget: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleBtnSubmit = e => {\n    e.preventDefault();\n\n    if (name === '' && number === '') {\n      return alert('Empty');\n    }\n\n    contacts.some(\n      \n      contact =>\n        contact.name.toLowerCase() === name.toLowerCase() ||\n        contact.number === number,\n    )\n      ? alert(`${name} is already in contacts.`)\n      : dispatch(addContact({ name, number, id: uuidv4() }));\n\n    reset();\n  };\n\n  const reset = () => {\n    setNumber('');\n    setName('');\n  };\n\n  return (\n    <form onSubmit={handleBtnSubmit} className={s.form} autoComplete=\"off\">\n      <label className={s.label}>\n        Name\n        <input\n          autoFocus\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleInputChange}\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Імя може містити лиш букви, апостроф, тире та пропуски. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleInputChange}\n          className={s.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефону повинен містити цифри, пропуски, тире, та починатись з +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={s.btn}>\n        Add contact\n      </button>\n    </form>\n  );\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { changeFilter } from 'redux/filter/filter-actions';\nimport { getFilterValue } from 'redux/filter/filter-selectors';\n\nimport s from './Filter.module.scss';\n\nconst Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  const onChange = ({ target: { value } }) => dispatch(changeFilter(value));\n\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue}\n        onChange={onChange}\n        className={s.input}\n      ></input>\n    </label>\n  );\n};\nexport default Filter;","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/contacts/contacts-actions';\nimport { getvisibleContacts } from 'redux/contacts/contacts-selectors';\n\nimport s from './ContactList.module.scss';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(getvisibleContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <ul className={s.list}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id} className={s.item}>\n          <div className={s.box}>\n            <p className={s.name}>{name}: </p>\n            <p className={s.number}>{number}</p>\n            <button className={s.btn} onClick={() => onDeleteContact(id)}>\n              {/* <button className={s.btn} onClick={onDeleteContact}> id={id} */}\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","import Title from './components/Title/Title';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nimport './App.scss';\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <h1 className=\"visually_hidden\">Phonebook</h1>\n\n      <Title title=\"Phonebook\" />\n      <ContactForm />\n\n      <Title title=\"Contacts\" />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}","import { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact } from './contacts-actions';\n\nconst items = createReducer([], {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nexport default items;\n","import { createReducer } from '@reduxjs/toolkit';\n\nimport { changeFilter } from './filter-actions';\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default filter;\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactReducer from './contacts/contacts-reducer';\nimport filterReducer from './filter/filter-reducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst rootReducer = combineReducers({\n  items: contactReducer,\n  filter: filterReducer,\n});\n\nexport const store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, rootReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport { store, persistor } from 'redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2_Ch8\",\"label\":\"ContactForm_label__2lQE9\",\"input\":\"ContactForm_input__1HnCw\",\"number\":\"ContactForm_number__3pb41\",\"btn\":\"ContactForm_btn__2cDbR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__BXOKG\",\"item\":\"ContactList_item__3NSCe\",\"box\":\"ContactList_box__peFvA\",\"name\":\"ContactList_name__2IWXf\",\"number\":\"ContactList_number__1X3WF\",\"btn\":\"ContactList_btn__2hxZP\"};"],"sourceRoot":""}